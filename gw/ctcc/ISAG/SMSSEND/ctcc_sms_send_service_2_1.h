/* ctcc_sms_send_service_2_1.h
   Generated by wsdl2h 2.8.15 from ctcc_sms_send_service_2_1.wsdl and typemap.dat
   2013-07-16 07:27:37 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2000-2013 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Usage Notes

NOTE:

 - Run soapcpp2 on ctcc_sms_send_service_2_1.h to generate the SOAP/XML processing logic.
   Use soapcpp2 -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 -j to generate improved proxy and server classes.
 - Use wsdl2h -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -R to generate REST operations.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Use wsdl2h -d to enable DOM support for xsd:anyType.
 - Use wsdl2h -g to auto-generate readers and writers for root elements.
 - Use wsdl2h -b to auto-generate bi-directional operations (duplex ops).
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

WARNING:

   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

LICENSE:

@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following two licenses:
GPL or Genivia's license for commercial use.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt cw

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://www.chinatelecom.com.cn/wsdl/ctcc/sms/send/v2_1/service           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "http://www.chinatelecom.com.cn/wsdl/ctcc/sms/send/v2_1/service"
ns2 = "http://www.chinatelecom.com.cn/schema/ctcc/sms/send/v2_1/local"
ns3 = ""
ns4 = "http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1"
ns5 = "http://www.chinatelecom.com.cn/schema/ctcc/sms/v2_1"

*/

#define SOAP_NAMESPACE_OF_ns2	"http://www.chinatelecom.com.cn/schema/ctcc/sms/send/v2_1/local"
//gsoap ns2   schema namespace:	http://www.chinatelecom.com.cn/schema/ctcc/sms/send/v2_1/local
//gsoap ns2   schema elementForm:	qualified
//gsoap ns2   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_ns3	""
//gsoap ns3   schema namespace:	
//gsoap ns3   schema elementForm:	qualified
//gsoap ns3   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_ns4	"http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1"
//gsoap ns4   schema namespace:	http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1
//gsoap ns4   schema form:	unqualified

#define SOAP_NAMESPACE_OF_ns5	"http://www.chinatelecom.com.cn/schema/ctcc/sms/v2_1"
//gsoap ns5   schema namespace:	http://www.chinatelecom.com.cn/schema/ctcc/sms/v2_1
//gsoap ns5   schema form:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


/// Built-in type "xs:base64Binary".
struct xsd__base64Binary
{	unsigned char *__ptr;
	int __size;
	char *id, *type, *options; // NOTE: non-NULL for DIMEM/MIME/MTOM XOP attachments only
};

/// Built-in type "xs:boolean".
enum xsd__boolean { xsd__boolean__false_, xsd__boolean__true_ };

/// Primitive built-in type "xs:anyURI"
typedef char* xsd__anyURI;

/// Primitive built-in type "xs:decimal"
typedef char* xsd__decimal;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.chinatelecom.com.cn/schema/ctcc/sms/send/v2_1/local           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.chinatelecom.com.cn/schema/ctcc/sms/v2_1                      *
 *                                                                            *
\******************************************************************************/


/// "http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1":DeliveryConfirmStatus is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns4__DeliveryConfirmStatus' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns4__DeliveryConfirmStatus
{
	ns4__DeliveryConfirmStatus__Success,	///< xs:string value="Success"
	ns4__DeliveryConfirmStatus__Fail,	///< xs:string value="Fail"
};

/// "http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1":EndReason is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns4__EndReason' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns4__EndReason
{
	ns4__EndReason__0 = 0,	///< xs:string value="0"
	ns4__EndReason___x002d1 = -1,	///< xs:string value="-1"
	ns4__EndReason__1 = 1,	///< xs:string value="1"
	ns4__EndReason__2 = 2,	///< xs:string value="2"
};

/// "http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1":TimeMetrics is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns4__TimeMetrics' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns4__TimeMetrics
{
	ns4__TimeMetrics__Millisecond,	///< xs:string value="Millisecond"
	ns4__TimeMetrics__Second,	///< xs:string value="Second"
	ns4__TimeMetrics__Minute,	///< xs:string value="Minute"
	ns4__TimeMetrics__Hour,	///< xs:string value="Hour"
	ns4__TimeMetrics__Day,	///< xs:string value="Day"
	ns4__TimeMetrics__Week,	///< xs:string value="Week"
	ns4__TimeMetrics__Month,	///< xs:string value="Month"
	ns4__TimeMetrics__Year,	///< xs:string value="Year"
};

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.chinatelecom.com.cn/schema/ctcc/sms/v2_1                      *
 *                                                                            *
\******************************************************************************/


/// "http://www.chinatelecom.com.cn/schema/ctcc/sms/v2_1":DeliveryStatus is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns5__DeliveryStatus' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns5__DeliveryStatus
{
	ns5__DeliveryStatus__DeliveredToNetwork,	///< xs:string value="DeliveredToNetwork"
	ns5__DeliveryStatus__DeliveryUncertain,	///< xs:string value="DeliveryUncertain"
	ns5__DeliveryStatus__DeliveryImpossible,	///< xs:string value="DeliveryImpossible"
	ns5__DeliveryStatus__MessageWaiting,	///< xs:string value="MessageWaiting"
	ns5__DeliveryStatus__DeliveredToTerminal,	///< xs:string value="DeliveredToTerminal"
	ns5__DeliveryStatus__DeliveryNotificationNotSupported,	///< xs:string value="DeliveryNotificationNotSupported"
	ns5__DeliveryStatus__AuthPriceFailed,	///< xs:string value="AuthPriceFailed"
};

/// "http://www.chinatelecom.com.cn/schema/ctcc/sms/v2_1":SmsFormat is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns5__SmsFormat' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns5__SmsFormat
{
	ns5__SmsFormat__Ems,	///< xs:string value="Ems"
	ns5__SmsFormat__SmartMessaging,	///< xs:string value="SmartMessaging"
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.chinatelecom.com.cn/schema/ctcc/sms/send/v2_1/local           *
 *                                                                            *
\******************************************************************************/


/// "http://www.chinatelecom.com.cn/schema/ctcc/sms/send/v2_1/local":sendSms is a complexType.
struct ns2__sendSms
{
/// Size of array of xsd__anyURI* is 1..unbounded
   $int                                  __sizeaddresses                1;
/// Array xsd__anyURI* of length 1..unbounded
    xsd__anyURI*                         addresses                      1;
/// Element senderName of type xs:string.
    char*                                senderName                     0;	///< Optional element.
/// Element charging of type "http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1":ChargingInformation.
    struct ns4__ChargingInformation*     charging                       0;	///< Optional element.
/// Element message of type xs:string.
    char*                                message                        1;	///< Required element.
/// Element receiptRequest of type "http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1":SimpleReference.
    struct ns4__SimpleReference*         receiptRequest                 0;	///< Optional element.
};

/// "http://www.chinatelecom.com.cn/schema/ctcc/sms/send/v2_1/local":sendSmsResponse is a complexType.
struct ns2__sendSmsResponse
{
/// Element result of type xs:string.
    char*                                result                         1;	///< Required element.
};

/// "http://www.chinatelecom.com.cn/schema/ctcc/sms/send/v2_1/local":sendSmsLogo is a complexType.
struct ns2__sendSmsLogo
{
/// Size of array of xsd__anyURI* is 1..unbounded
   $int                                  __sizeaddresses                1;
/// Array xsd__anyURI* of length 1..unbounded
    xsd__anyURI*                         addresses                      1;
/// Element senderName of type xs:string.
    char*                                senderName                     0;	///< Optional element.
/// Element charging of type "http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1":ChargingInformation.
    struct ns4__ChargingInformation*     charging                       0;	///< Optional element.
/// Element image of type xs:base64Binary.
    struct xsd__base64Binary             image                          1;	///< Required element.
/// Element smsFormat of type "http://www.chinatelecom.com.cn/schema/ctcc/sms/v2_1":SmsFormat.
    enum ns5__SmsFormat                  smsFormat                      1;	///< Required element.
/// Element receiptRequest of type "http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1":SimpleReference.
    struct ns4__SimpleReference*         receiptRequest                 0;	///< Optional element.
};

/// "http://www.chinatelecom.com.cn/schema/ctcc/sms/send/v2_1/local":sendSmsLogoResponse is a complexType.
struct ns2__sendSmsLogoResponse
{
/// Element result of type xs:string.
    char*                                result                         1;	///< Required element.
};

/// "http://www.chinatelecom.com.cn/schema/ctcc/sms/send/v2_1/local":sendSmsRingtone is a complexType.
struct ns2__sendSmsRingtone
{
/// Size of array of xsd__anyURI* is 1..unbounded
   $int                                  __sizeaddresses                1;
/// Array xsd__anyURI* of length 1..unbounded
    xsd__anyURI*                         addresses                      1;
/// Element senderName of type xs:string.
    char*                                senderName                     0;	///< Optional element.
/// Element charging of type "http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1":ChargingInformation.
    struct ns4__ChargingInformation*     charging                       0;	///< Optional element.
/// Element ringtone of type xs:string.
    char*                                ringtone                       1;	///< Required element.
/// Element smsFormat of type "http://www.chinatelecom.com.cn/schema/ctcc/sms/v2_1":SmsFormat.
    enum ns5__SmsFormat                  smsFormat                      1;	///< Required element.
/// Element receiptRequest of type "http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1":SimpleReference.
    struct ns4__SimpleReference*         receiptRequest                 0;	///< Optional element.
};

/// "http://www.chinatelecom.com.cn/schema/ctcc/sms/send/v2_1/local":sendSmsRingtoneResponse is a complexType.
struct ns2__sendSmsRingtoneResponse
{
/// Element result of type xs:string.
    char*                                result                         1;	///< Required element.
};

/// "http://www.chinatelecom.com.cn/schema/ctcc/sms/send/v2_1/local":getSmsDeliveryStatus is a complexType.
struct ns2__getSmsDeliveryStatus
{
/// Element requestIdentifier of type xs:string.
    char*                                requestIdentifier              1;	///< Required element.
};

/// "http://www.chinatelecom.com.cn/schema/ctcc/sms/send/v2_1/local":getSmsDeliveryStatusResponse is a complexType.
struct ns2__getSmsDeliveryStatusResponse
{
/// Size of array of struct ns5__DeliveryInformation* is 0..unbounded
   $int                                  __sizeresult                   0;
/// Array struct ns5__DeliveryInformation* of length 0..unbounded
    struct ns5__DeliveryInformation*     result                         0;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1                   *
 *                                                                            *
\******************************************************************************/


/// "http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1":RequestSOAPHeader is a complexType.
struct ns4__RequestSOAPHeader
{
/// Element spId of type xs:string.
    char*                                spId                           1;	///< Required element.
/// Element spPassword of type xs:string.
    char*                                spPassword                     1;	///< Required element.
/// Element timeStamp of type xs:string.
    char*                                timeStamp                      1;	///< Required element.
/// Element productId of type xs:string.
    char*                                productId                      1;	///< Required element.
/// Element SAN of type xs:string.
    char*                                SAN                            0;	///< Optional element.
/// Element transactionId of type xs:string.
    char*                                transactionId                  0;	///< Optional element.
/// Element transEnd of type "http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1":EndReason.
    enum ns4__EndReason*                 transEnd                       0;	///< Optional element.
/// Element linkId of type xs:string.
    char*                                linkId                         0;	///< Optional element.
/// Element OA of type xs:anyURI.
    xsd__anyURI                          OA                             0;	///< Optional element.
/// Element FA of type xs:anyURI.
    xsd__anyURI                          FA                             0;	///< Optional element.
/// Element multicastMessaging of type xs:boolean.
    enum xsd__boolean*                   multicastMessaging             0;	///< Optional element.
};

/// "http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1":NotifySOAPHeader is a complexType.
struct ns4__NotifySOAPHeader
{
/// Element spRevId of type xs:string.
    char*                                spRevId                        0;	///< Optional element.
/// Element spRevpassword of type xs:string.
    char*                                spRevpassword                  0;	///< Optional element.
/// Element spId of type xs:string.
    char*                                spId                           1;	///< Required element.
/// Element SAN of type xs:string.
    char*                                SAN                            0;	///< Optional element.
/// Element transactionId of type xs:string.
    char*                                transactionId                  0;	///< Optional element.
/// Element linkId of type xs:string.
    char*                                linkId                         0;	///< Optional element.
};

/// "http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1":TimeMetric is a complexType.
struct ns4__TimeMetric
{
/// Element metric of type "http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1":TimeMetrics.
    enum ns4__TimeMetrics                metric                         1;	///< Required element.
/// Element units of type xs:int.
    int                                  units                          1;	///< Required element.
};

/// "http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1":ChargingInformation is a complexType.
struct ns4__ChargingInformation
{
/// Element description of type xs:string.
    char*                                description                    1;	///< Required element.
/// Element currency of type xs:string.
    char*                                currency                       0;	///< Optional element.
/// Element amount of type xs:decimal.
    xsd__decimal                         amount                         0;	///< Optional element.
/// Element code of type xs:string.
    char*                                code                           0;	///< Optional element.
};

/// "http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1":SimpleReference is a complexType.
struct ns4__SimpleReference
{
/// Element endpoint of type xs:anyURI.
    xsd__anyURI                          endpoint                       1;	///< Required element.
/// Element interfaceName of type xs:string.
    char*                                interfaceName                  1;	///< Required element.
/// Element correlator of type xs:string.
    char*                                correlator                     1;	///< Required element.
};

/// "http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1":ServiceError is a complexType.
struct ns4__ServiceError
{
/// Element messageId of type xs:string.
    char*                                messageId                      1;	///< Required element.
/// Element text of type xs:string.
    char*                                text                           1;	///< Required element.
/// Size of array of char** is 0..unbounded
   $int                                  __sizevariables                0;
/// Array char** of length 0..unbounded
    char**                               variables                      0;
};

/// "http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1":ServiceException is a complexType.
struct ns4__ServiceException
{
/// Element messageId of type xs:string.
    char*                                messageId                      1;	///< Required element.
/// Element text of type xs:string.
    char*                                text                           1;	///< Required element.
/// Size of array of char** is 0..unbounded
   $int                                  __sizevariables                0;
/// Array char** of length 0..unbounded
    char**                               variables                      0;
};

/// "http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1":PolicyException is a complexType.
struct ns4__PolicyException
{
/// Element messageId of type xs:string.
    char*                                messageId                      1;	///< Required element.
/// Element text of type xs:string.
    char*                                text                           1;	///< Required element.
/// Size of array of char** is 0..unbounded
   $int                                  __sizevariables                0;
/// Array char** of length 0..unbounded
    char**                               variables                      0;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.chinatelecom.com.cn/schema/ctcc/sms/v2_1                      *
 *                                                                            *
\******************************************************************************/


/// "http://www.chinatelecom.com.cn/schema/ctcc/sms/v2_1":DeliveryInformation is a complexType.
struct ns5__DeliveryInformation
{
/// Element address of type xs:anyURI.
    xsd__anyURI                          address                        1;	///< Required element.
/// Element deliveryStatus of type "http://www.chinatelecom.com.cn/schema/ctcc/sms/v2_1":DeliveryStatus.
    enum ns5__DeliveryStatus             deliveryStatus                 1;	///< Required element.
};

/// "http://www.chinatelecom.com.cn/schema/ctcc/sms/v2_1":SmsMessage is a complexType.
struct ns5__SmsMessage
{
/// Element message of type xs:string.
    char*                                message                        1;	///< Required element.
/// Element senderAddress of type xs:anyURI.
    xsd__anyURI                          senderAddress                  1;	///< Required element.
/// Element smsServiceActivationNumber of type xs:anyURI.
    xsd__anyURI                          smsServiceActivationNumber     1;	///< Required element.
};

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.chinatelecom.com.cn/schema/ctcc/sms/send/v2_1/local           *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://www.chinatelecom.com.cn/schema/ctcc/sms/send/v2_1/local":sendSms of type "http://www.chinatelecom.com.cn/schema/ctcc/sms/send/v2_1/local":sendSms.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.chinatelecom.com.cn/schema/ctcc/sms/send/v2_1/local":sendSmsResponse of type "http://www.chinatelecom.com.cn/schema/ctcc/sms/send/v2_1/local":sendSmsResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.chinatelecom.com.cn/schema/ctcc/sms/send/v2_1/local":sendSmsLogo of type "http://www.chinatelecom.com.cn/schema/ctcc/sms/send/v2_1/local":sendSmsLogo.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.chinatelecom.com.cn/schema/ctcc/sms/send/v2_1/local":sendSmsLogoResponse of type "http://www.chinatelecom.com.cn/schema/ctcc/sms/send/v2_1/local":sendSmsLogoResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.chinatelecom.com.cn/schema/ctcc/sms/send/v2_1/local":sendSmsRingtone of type "http://www.chinatelecom.com.cn/schema/ctcc/sms/send/v2_1/local":sendSmsRingtone.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.chinatelecom.com.cn/schema/ctcc/sms/send/v2_1/local":sendSmsRingtoneResponse of type "http://www.chinatelecom.com.cn/schema/ctcc/sms/send/v2_1/local":sendSmsRingtoneResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.chinatelecom.com.cn/schema/ctcc/sms/send/v2_1/local":getSmsDeliveryStatus of type "http://www.chinatelecom.com.cn/schema/ctcc/sms/send/v2_1/local":getSmsDeliveryStatus.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.chinatelecom.com.cn/schema/ctcc/sms/send/v2_1/local":getSmsDeliveryStatusResponse of type "http://www.chinatelecom.com.cn/schema/ctcc/sms/send/v2_1/local":getSmsDeliveryStatusResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.chinatelecom.com.cn/schema/ctcc/sms/send/v2_1/local           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1                   *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1":RequestSOAPHeader of type "http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1":RequestSOAPHeader.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1":NotifySOAPHeader of type "http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1":NotifySOAPHeader.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1":ServiceException of type "http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1":ServiceException.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1":PolicyException of type "http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1":PolicyException.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.chinatelecom.com.cn/schema/ctcc/sms/v2_1                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.chinatelecom.com.cn/schema/ctcc/sms/v2_1                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns1  service name:	SendSmsBinding 
//gsoap ns1  service type:	SendSms 
//gsoap ns1  service port:	http://localhost:9080/SendSmsService/services/SendSms 
//gsoap ns1  service namespace:	http://www.chinatelecom.com.cn/wsdl/ctcc/sms/send/v2_1/service 
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage ctcc_sms_send_service Definitions

@section ctcc_USCOREsms_USCOREsend_USCOREservice_bindings Service Bindings

  - @ref SendSmsBinding

@section ctcc_USCOREsms_USCOREsend_USCOREservice_more More Information

  - @ref page_notes "Usage Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page SendSmsBinding Binding "SendSmsBinding"

@section SendSmsBinding_operations Operations of Binding  "SendSmsBinding"

  - @ref __ns1__sendSms

  - @ref __ns1__sendSmsLogo

  - @ref __ns1__sendSmsRingtone

  - @ref __ns1__getSmsDeliveryStatus

@section SendSmsBinding_ports Endpoints of Binding  "SendSmsBinding"

  - http://localhost:9080/SendSmsService/services/SendSms

Note: use wsdl2h option -Nname to change the service binding prefix name


*/

/******************************************************************************\
 *                                                                            *
 * SOAP Header                                                                *
 *                                                                            *
\******************************************************************************/

/**

The SOAP Header is part of the gSOAP context and its content is accessed
through the soap.header variable. You may have to set the soap.actor variable
to serialize SOAP Headers with SOAP-ENV:actor or SOAP-ENV:role attributes.
Use option -j to remove entire SOAP Header definition.
Use option -k to remove the mustUnderstand qualifiers.

*/
struct SOAP_ENV__Header
{
    mustUnderstand                       // must be understood by receiver
/// "RequestSOAPHeader" SOAP Header part element
    struct ns4__RequestSOAPHeader*       ns4__RequestSOAPHeader        ;

};

/******************************************************************************\
 *                                                                            *
 * SOAP Fault Detail                                                          *
 *                                                                            *
\******************************************************************************/

/**

The SOAP Fault is part of the gSOAP context and its content is accessed
through the soap.fault->detail variable (SOAP 1.1) or the
soap.fault->SOAP_ENV__Detail variable (SOAP 1.2).
Use option -j to omit.

*/
struct SOAP_ENV__Detail
{
// xsd:anyAttribute omitted: to parse attribute content of the Detail element into DOM anyAttribute, use wsdl2h option -d.
    _XML                                 __any                         ;	///< Catch any element content in XML string.
    struct ns4__PolicyException*         ns4__PolicyException          ;
///< SOAP Fault element ""http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1":PolicyException" part "PolicyException"
    struct ns4__ServiceException*        ns4__ServiceException         ;
///< SOAP Fault element ""http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1":ServiceException" part "ServiceException"
    int                                  __type                        ;	///< set to SOAP_TYPE_X for a serializable type X
    void                                *fault                         ;	///< points to serializable object X or NULL
};

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   SendSmsBinding                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__sendSms                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__sendSms" of service binding "SendSmsBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

  - SOAP Output Fault: "http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1":ServiceException (literal)

  - SOAP Output Fault: "http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1":PolicyException (literal)

  - Request message has mandatory header part(s) (see @ref SOAP_ENV__Header):
    - ns4__RequestSOAPHeader

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__sendSms(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct ns2__sendSms*                ns2__sendSms,
    // output parameters:
    struct ns2__sendSmsResponse*        ns2__sendSmsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__sendSms(
    struct soap *soap,
    // input parameters:
    struct ns2__sendSms*                ns2__sendSms,
    // output parameters:
    struct ns2__sendSmsResponse*        ns2__sendSmsResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	sendSms SOAP
//gsoap ns1  service method-style:	sendSms document
//gsoap ns1  service method-encoding:	sendSms literal
//gsoap ns1  service method-action:	sendSms ""
//gsoap ns1  service method-output-action:	sendSms Response
//gsoap ns1  service method-fault:	sendSms ns4__ServiceException
//gsoap ns1  service method-fault:	sendSms ns4__PolicyException
//gsoap ns1  service method-input-header-part:	sendSms ns4__RequestSOAPHeader
int __ns1__sendSms(
    struct ns2__sendSms*                ns2__sendSms,	///< Input parameter
    struct ns2__sendSmsResponse*        ns2__sendSmsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__sendSmsLogo                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__sendSmsLogo" of service binding "SendSmsBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

  - SOAP Output Fault: "http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1":ServiceException (literal)

  - SOAP Output Fault: "http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1":PolicyException (literal)

  - Request message has mandatory header part(s) (see @ref SOAP_ENV__Header):
    - ns4__RequestSOAPHeader

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__sendSmsLogo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct ns2__sendSmsLogo*            ns2__sendSmsLogo,
    // output parameters:
    struct ns2__sendSmsLogoResponse*    ns2__sendSmsLogoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__sendSmsLogo(
    struct soap *soap,
    // input parameters:
    struct ns2__sendSmsLogo*            ns2__sendSmsLogo,
    // output parameters:
    struct ns2__sendSmsLogoResponse*    ns2__sendSmsLogoResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	sendSmsLogo SOAP
//gsoap ns1  service method-style:	sendSmsLogo document
//gsoap ns1  service method-encoding:	sendSmsLogo literal
//gsoap ns1  service method-action:	sendSmsLogo ""
//gsoap ns1  service method-output-action:	sendSmsLogo Response
//gsoap ns1  service method-fault:	sendSmsLogo ns4__ServiceException
//gsoap ns1  service method-fault:	sendSmsLogo ns4__PolicyException
//gsoap ns1  service method-input-header-part:	sendSmsLogo ns4__RequestSOAPHeader
int __ns1__sendSmsLogo(
    struct ns2__sendSmsLogo*            ns2__sendSmsLogo,	///< Input parameter
    struct ns2__sendSmsLogoResponse*    ns2__sendSmsLogoResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__sendSmsRingtone                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__sendSmsRingtone" of service binding "SendSmsBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

  - SOAP Output Fault: "http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1":ServiceException (literal)

  - SOAP Output Fault: "http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1":PolicyException (literal)

  - Request message has mandatory header part(s) (see @ref SOAP_ENV__Header):
    - ns4__RequestSOAPHeader

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__sendSmsRingtone(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct ns2__sendSmsRingtone*        ns2__sendSmsRingtone,
    // output parameters:
    struct ns2__sendSmsRingtoneResponse* ns2__sendSmsRingtoneResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__sendSmsRingtone(
    struct soap *soap,
    // input parameters:
    struct ns2__sendSmsRingtone*        ns2__sendSmsRingtone,
    // output parameters:
    struct ns2__sendSmsRingtoneResponse* ns2__sendSmsRingtoneResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	sendSmsRingtone SOAP
//gsoap ns1  service method-style:	sendSmsRingtone document
//gsoap ns1  service method-encoding:	sendSmsRingtone literal
//gsoap ns1  service method-action:	sendSmsRingtone ""
//gsoap ns1  service method-output-action:	sendSmsRingtone Response
//gsoap ns1  service method-fault:	sendSmsRingtone ns4__ServiceException
//gsoap ns1  service method-fault:	sendSmsRingtone ns4__PolicyException
//gsoap ns1  service method-input-header-part:	sendSmsRingtone ns4__RequestSOAPHeader
int __ns1__sendSmsRingtone(
    struct ns2__sendSmsRingtone*        ns2__sendSmsRingtone,	///< Input parameter
    struct ns2__sendSmsRingtoneResponse* ns2__sendSmsRingtoneResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__getSmsDeliveryStatus                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__getSmsDeliveryStatus" of service binding "SendSmsBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

  - SOAP Output Fault: "http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1":ServiceException (literal)

  - SOAP Output Fault: "http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1":PolicyException (literal)

  - Request message has mandatory header part(s) (see @ref SOAP_ENV__Header):
    - ns4__RequestSOAPHeader

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__getSmsDeliveryStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct ns2__getSmsDeliveryStatus*   ns2__getSmsDeliveryStatus,
    // output parameters:
    struct ns2__getSmsDeliveryStatusResponse* ns2__getSmsDeliveryStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__getSmsDeliveryStatus(
    struct soap *soap,
    // input parameters:
    struct ns2__getSmsDeliveryStatus*   ns2__getSmsDeliveryStatus,
    // output parameters:
    struct ns2__getSmsDeliveryStatusResponse* ns2__getSmsDeliveryStatusResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	getSmsDeliveryStatus SOAP
//gsoap ns1  service method-style:	getSmsDeliveryStatus document
//gsoap ns1  service method-encoding:	getSmsDeliveryStatus literal
//gsoap ns1  service method-action:	getSmsDeliveryStatus ""
//gsoap ns1  service method-output-action:	getSmsDeliveryStatus Response
//gsoap ns1  service method-fault:	getSmsDeliveryStatus ns4__ServiceException
//gsoap ns1  service method-fault:	getSmsDeliveryStatus ns4__PolicyException
//gsoap ns1  service method-input-header-part:	getSmsDeliveryStatus ns4__RequestSOAPHeader
int __ns1__getSmsDeliveryStatus(
    struct ns2__getSmsDeliveryStatus*   ns2__getSmsDeliveryStatus,	///< Input parameter
    struct ns2__getSmsDeliveryStatusResponse* ns2__getSmsDeliveryStatusResponse	///< Output parameter
);

/**

@page SendSmsBinding Binding "SendSmsBinding"

@section SendSmsBinding_policy_enablers Policy Enablers of Binding  "SendSmsBinding"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

Data can be read in XML and deserialized from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

Data can be serialized in XML and written to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback

The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


@section ns2 Top-level root elements of schema "http://www.chinatelecom.com.cn/schema/ctcc/sms/send/v2_1/local"

  - <ns2:sendSms> (use wsdl2h option -g to auto-generate)

  - <ns2:sendSmsResponse> (use wsdl2h option -g to auto-generate)

  - <ns2:sendSmsLogo> (use wsdl2h option -g to auto-generate)

  - <ns2:sendSmsLogoResponse> (use wsdl2h option -g to auto-generate)

  - <ns2:sendSmsRingtone> (use wsdl2h option -g to auto-generate)

  - <ns2:sendSmsRingtoneResponse> (use wsdl2h option -g to auto-generate)

  - <ns2:getSmsDeliveryStatus> (use wsdl2h option -g to auto-generate)

  - <ns2:getSmsDeliveryStatusResponse> (use wsdl2h option -g to auto-generate)

@section ns3 Top-level root elements of schema ""

@section ns4 Top-level root elements of schema "http://www.chinatelecom.com.cn/schema/ctcc/common/v2_1"

  - <ns4:RequestSOAPHeader> (use wsdl2h option -g to auto-generate)

  - <ns4:NotifySOAPHeader> (use wsdl2h option -g to auto-generate)

  - <ns4:ServiceException> (use wsdl2h option -g to auto-generate)

  - <ns4:PolicyException> (use wsdl2h option -g to auto-generate)

@section ns5 Top-level root elements of schema "http://www.chinatelecom.com.cn/schema/ctcc/sms/v2_1"

*/

/* End of ctcc_sms_send_service_2_1.h */
